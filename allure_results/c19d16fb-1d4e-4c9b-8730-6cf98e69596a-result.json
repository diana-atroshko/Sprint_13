{"name": "Тест на успешное принятие заказа", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <tests.test_order_acceptance.TestOrderAcceptance object at 0x000001C16330BD40>\n\n    @allure.title(\"Тест на успешное принятие заказа\")\n    @allure.description(\"Создает курьера и заказ, затем проверяет успешное принятие заказа курьером.\")\n    def test_accept_order_success(self):\n    \n        courier_payload = self.courier_methods.generate_courier_data()\n        self.courier_methods.create_courier(courier_payload)\n        courier_id = self.courier_methods.get_courier_id(courier_payload['login'], courier_payload['password'])\n    \n        response = self.order_methods.create_order(ORDER_DATA_1)\n        assert response.status_code == 201\n    \n        order_data = response.json()\n        print(f\"Order Response: {order_data}\")\n        assert \"track\" in order_data\n        order_id = str(order_data[\"track\"])\n        time.sleep(25)\n        order_status_response = self.order_methods.get_order_by_id(order_id)\n        assert order_status_response.status_code == 200\n    \n        acceptance = self.order_methods.accept_order(order_id, courier_id)\n        print(acceptance.json())\n>       assert acceptance.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\test_order_acceptance.py:35: AssertionError"}, "description": "Создает курьера и заказ, затем проверяет успешное принятие заказа курьером.", "steps": [{"name": "Генерируем данные для регистрации курьера", "status": "passed", "start": 1733751971664, "stop": 1733751971664}, {"name": "Создаем курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'gnebnktzpp', 'password': 'tseuhmfznp', 'firstName': 'ntgvohrfdw'}"}], "start": 1733751971664, "stop": 1733751971805}, {"name": "Получаем ID курьера", "status": "passed", "steps": [{"name": "Логинимся как курьер", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'gnebnktzpp', 'password': 'tseuhmfznp'}"}], "start": 1733751971805, "stop": 1733751971903}], "parameters": [{"name": "login", "value": "'gnebnktzpp'"}, {"name": "password", "value": "'tseuhmfznp'"}], "start": 1733751971805, "stop": 1733751971903}, {"name": "Создаем заказ с данными", "status": "passed", "parameters": [{"name": "payload", "value": "{'first_name': 'Naruto', 'last_name': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metro_station': 4, 'phone': '+7 800 355 35 35', 'rent_time': 5, 'delivery_date': '2020-06-06', 'comment': 'Saske, come back to Konoha', 'color': ['GREY'], 'expected_status': 201}"}], "start": 1733751971903, "stop": 1733751972001}, {"name": "Получаем заказ по ID", "status": "passed", "parameters": [{"name": "order_id", "value": "'502026'"}], "start": 1733751997002, "stop": 1733751997204}, {"name": "Принимаем заказ с ID заказа и курьера", "status": "passed", "parameters": [{"name": "order_id", "value": "'502026'"}, {"name": "courier_id", "value": "433910"}], "start": 1733751997204, "stop": 1733751997346}], "attachments": [{"name": "stdout", "source": "8cdc958a-bb16-4994-92c3-fc3fe5420153-attachment.txt", "type": "text/plain"}], "start": 1733751971664, "stop": 1733751997347, "uuid": "24911650-7982-4751-b6f4-bbe7c0dc1274", "historyId": "61465cfc62e423e995526993508fe18f", "testCaseId": "61465cfc62e423e995526993508fe18f", "fullName": "tests.test_order_acceptance.TestOrderAcceptance#test_accept_order_success", "labels": [{"name": "epic", "value": "Тестирование Принятия Заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_acceptance"}, {"name": "subSuite", "value": "TestOrderAcceptance"}, {"name": "host", "value": "WIN-EKB0MMLGAJ0"}, {"name": "thread", "value": "1808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_acceptance"}]}