{"name": "Тест на успешное принятие заказа", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <tests.test_order_acceptance.TestOrderAcceptance object at 0x00000167AF8739B0>\n\n    @allure.title(\"Тест на успешное принятие заказа\")\n    @allure.description(\"Создает курьера и заказ, затем проверяет успешное принятие заказа курьером.\")\n    def test_accept_order_success(self):\n    \n        courier_payload = self.courier_methods.generate_courier_data()\n        self.courier_methods.create_courier(courier_payload)\n        courier_id = self.courier_methods.get_courier_id(courier_payload['login'], courier_payload['password'])\n    \n        response = self.order_methods.create_order(ORDER_DATA_1)\n        assert response.status_code == 201\n    \n        order_data = response.json()\n        print(f\"Order Response: {order_data}\")\n        assert \"track\" in order_data\n        order_id = str(order_data[\"track\"])\n        time.sleep(25)\n    \n        acceptance = self.order_methods.accept_order(order_id, courier_id)\n        print(acceptance.json())\n>       assert acceptance.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\test_order_acceptance.py:33: AssertionError"}, "description": "Создает курьера и заказ, затем проверяет успешное принятие заказа курьером.", "steps": [{"name": "Генерируем данные для регистрации курьера", "status": "passed", "start": 1733751677901, "stop": 1733751677902}, {"name": "Создаем курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'phqjktqvzo', 'password': 'klwrlhdtwn', 'firstName': 'ovvxhujbey'}"}], "start": 1733751677902, "stop": 1733751678010}, {"name": "Получаем ID курьера", "status": "passed", "steps": [{"name": "Логинимся как курьер", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'phqjktqvzo', 'password': 'klwrlhdtwn'}"}], "start": 1733751678010, "stop": 1733751678194}], "parameters": [{"name": "login", "value": "'phqjktqvzo'"}, {"name": "password", "value": "'klwrlhdtwn'"}], "start": 1733751678010, "stop": 1733751678194}, {"name": "Создаем заказ с данными", "status": "passed", "parameters": [{"name": "payload", "value": "{'first_name': 'Naruto', 'last_name': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metro_station': 4, 'phone': '+7 800 355 35 35', 'rent_time': 5, 'delivery_date': '2020-06-06', 'comment': 'Saske, come back to Konoha', 'color': ['GREY'], 'expected_status': 201}"}], "start": 1733751678195, "stop": 1733751678288}, {"name": "Принимаем заказ с ID заказа и курьера", "status": "passed", "parameters": [{"name": "order_id", "value": "'481397'"}, {"name": "courier_id", "value": "433900"}], "start": 1733751703288, "stop": 1733751703422}], "attachments": [{"name": "stdout", "source": "a329d5f1-3970-4fd3-be10-49d9dc9fc615-attachment.txt", "type": "text/plain"}], "start": 1733751677901, "stop": 1733751703423, "uuid": "02a0aeba-ba3c-47f7-949f-30aba1c32afe", "historyId": "61465cfc62e423e995526993508fe18f", "testCaseId": "61465cfc62e423e995526993508fe18f", "fullName": "tests.test_order_acceptance.TestOrderAcceptance#test_accept_order_success", "labels": [{"name": "epic", "value": "Тестирование Принятия Заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_acceptance"}, {"name": "subSuite", "value": "TestOrderAcceptance"}, {"name": "host", "value": "WIN-EKB0MMLGAJ0"}, {"name": "thread", "value": "22964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_acceptance"}]}